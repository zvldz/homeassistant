substitutions:
  device_name: sonoff_rf_br_3
  repeat_wait: '10ms'
  repeat_times: '5'

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  output_power: 17dB
  ssid: !secret wifi_ssid_3
  password: !secret wifi_pass_3
  manual_ip:
    static_ip: 192.168.1.118
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 1.1.1.1

api:
  services:
    - service: send_rf_code
      variables:
        sync: int
        low: int
        high: int
        code: int
      then:
        - rf_bridge.send_code:
            sync: !lambda 'return sync;'
            low: !lambda 'return low;'
            high: !lambda 'return high;'
            code: !lambda 'return code;'
    - service: learn
      then:
        - rf_bridge.learn

logger:
  baud_rate: 0

ota:
captive_portal:

uart:
  tx_pin: 1
  rx_pin: 3
  baud_rate: 19200

rf_bridge:
  on_code_received:
    then:
      - homeassistant.event:
          event: esphome.rf_code_received
          data:
            sync: !lambda 'char buffer [10];return itoa(data.sync,buffer,16);'
            low: !lambda 'char buffer [10];return itoa(data.low,buffer,16);'
            high: !lambda 'char buffer [10];return itoa(data.high,buffer,16);'
            code: !lambda 'char buffer [10];return itoa(data.code,buffer,16);'

binary_sensor:
  - platform: status
    name: ${device_name}_status

sensor:
  - platform: uptime
    name: ${device_name}_uptime
    icon: mdi:timer-outline

  - platform: wifi_signal
    name: ${device_name}_wifi_signal
    icon: mdi:wifi

text_sensor:
  - platform: version
    name: ${device_name}_esphome_version
    icon: mdi:information-outline

  - platform: wifi_info
    ip_address:
      name: ${device_name}_ip_address
      icon: mdi:ip-network
    ssid:
      name: ${device_name}_connected_ssid
      icon: mdi:access-point

switch:
  - platform: restart
    name: ${device_name}_restart
    icon: mdi:restart
