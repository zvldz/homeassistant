substitutions:
  device_name: sonoff_rf_br_2
  repeat_wait: '10ms'
  repeat_times: '5'

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  output_power: 17dB
  ssid: !secret wifi_ssid_3
  password: !secret wifi_pass_3
  manual_ip:
    static_ip: 192.168.1.31
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 1.1.1.1

logger:
api:
ota:
captive_portal:

binary_sensor:
  - platform: status
    name: ${device_name}_status

  - platform: remote_receiver
    name: ${device_name}_sb_rf
    device_class: power
    rc_switch_raw:
      code: !secret rf_code_sonoff
      protocol: 1
    filters:
      delayed_off: 5s

  - platform: remote_receiver
    name: ${device_name}_gate1
    device_class: door
    rc_switch_raw:
      code: !secret rf_code_gate1
      protocol: 1
    filters:
      delayed_off: 5s

  - platform: remote_receiver
    name: ${device_name}_gate2
    device_class: door
    rc_switch_raw:
      code: !secret rf_code_gate2
      protocol: 1
    filters:
      delayed_off: 5s

  - platform: remote_receiver
    name: ${device_name}_key4
    device_class: power
    rc_switch_raw:
      code: !secret rf_code_key4
      protocol: 1
    filters:
      delayed_off: 5s

sensor:
  - platform: uptime
    name: ${device_name}_uptime
    icon: mdi:timer-outline

  - platform: wifi_signal
    name: ${device_name}_wifi_signal
    icon: mdi:wifi

# - platform: template
#   name: ${device_name}_free_heap
#   icon: mdi:memory
#   lambda: "return ESP.getFreeHeap();"
#   update_interval: 20s
#   unit_of_measurement: bytes
#   accuracy_decimals: 0

text_sensor:
  - platform: version
    name: ${device_name}_esphome_version
    icon: mdi:information-outline

  - platform: wifi_info
    ip_address:
      name: ${device_name}_ip_address
      icon: mdi:ip-network
    ssid:
      name: ${device_name}_connected_ssid
      icon: mdi:access-point

switch:
  - platform: restart
    name: ${device_name}_restart
    icon: mdi:restart

  - platform: template
    name: ${device_name}_sb_rf
    turn_on_action:
      - remote_transmitter.transmit_rc_switch_raw:
          code: !secret rf_code_sonoff
          protocol: 1
          repeat:
            wait_time: ${repeat_wait}
            times: ${repeat_times}

  - platform: template
    name: ${device_name}_gate1
    turn_on_action:
      - remote_transmitter.transmit_rc_switch_raw:
          code: !secret rf_code_gate1
          protocol: 1
          repeat:
            wait_time: ${repeat_wait}
            times: ${repeat_times}

  - platform: template
    name: ${device_name}_gate2
    turn_on_action:
      - remote_transmitter.transmit_rc_switch_raw:
          code: !secret rf_code_gate2
          protocol: 1
          repeat:
            wait_time: ${repeat_wait}
            times: ${repeat_times}

  - platform: template
    name: ${device_name}_key4
    turn_on_action:
      - remote_transmitter.transmit_rc_switch_raw:
          code: !secret rf_code_key4
          protocol: 1
          repeat:
            wait_time: ${repeat_wait}
            times: ${repeat_times}

remote_receiver:
  pin: 4
  dump: rc_switch
  tolerance: 50
  filter: 4us
  idle: 4ms

remote_transmitter:
  pin: 5
  carrier_duty_percent: 100%

status_led:
  pin:
    number: GPIO13
    inverted: yes


