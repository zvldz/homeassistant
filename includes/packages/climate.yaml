input_boolean:
  gas_boiler_schedule:
    name: "Boiler work on schedule (Winter)"
    icon: "mdi:timer-outline"

input_number:
  gas_counter:
    name: "Gas Counter"
    icon: "mdi:fire"
    mode: box
    min: 0.0
    max: 99999.999

climate:
  - platform: generic_thermostat
    name: "Gas Boiler"
    heater: switch.esp_boiler_relay
    target_sensor: sensor.temperature_158d000231f03e
    ac_mode: false
    min_temp: 15
    max_temp: 25
    away_temp: 17
    cold_tolerance: 0.2
    hot_tolerance: 0.3
    min_cycle_duration:
      minutes: 5

  - platform: midea_ac
    host: !secret midea_ip_1
    id: !secret midea_id_1
  - platform: midea_ac
    host: !secret midea_ip_2
    id: !secret midea_id_2
  - platform: midea_ac
    host: !secret midea_ip_3
    id: !secret midea_id_3

sensor:
  - platform: rest
    resource_template: "{{ states('input_text.ha1_url') }}api/states/input_number.gas_counter"
    name: ha1_gas_counter
    headers:
      authorization: !secret ha1_token
    value_template: "{{ value_json.state }}"

  - platform: rest
    resource_template: "{{ states('input_text.ha2_url') }}api/states/input_number.gas_counter"
    name: ha2_gas_counter
    headers:
      authorization: !secret ha2_token
    value_template: "{{ value_json.state }}"

  - platform: template
    sensors:
      living_room_trv_calibration:
        value_template: "{{ state_attr('climate.living_room_trv_climate', 'local_temperature_calibration') }}"
        unit_of_measurement: "°C"

      master_bedroom_trv_calibration:
        value_template: "{{ state_attr('climate.master_bedroom_trv_climate', 'local_temperature_calibration') }}"
        unit_of_measurement: "°C"

      bedroom_trv_calibration:
        value_template: "{{ state_attr('climate.bedroom_trv_climate', 'local_temperature_calibration') }}"
        unit_of_measurement: "°C"

script:
  sync_gas_counter_with_ha1:
    alias: "Sync gas counter with ha1"
    sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.gas_counter
          value: "{{ states('sensor.ha1_gas_counter') }}"

  sync_gas_counter_with_ha2:
    alias: "Sync gas counter with ha2"
    sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.gas_counter
          value: "{{ states('sensor.ha2_gas_counter') }}"

  # Author @Enzokot
  auto_local_temperature_calibration_trv:
    alias: "Automatic calibration of local temperature of TRV"
    icon: mdi:hydraulic-oil-temperature
    mode: parallel
    fields:
      namevalve:
        description: 'FRIENDLY_NAME from z2m'
        example: 'Bedroom TRV'
      objectvalve:
        description: "Climate domain object name"
        example: 'climate.bedroom_trv_climate'
      objectvalvewindow:
        description: "Object name of window sensor"
        example: 'switch.bedroom_trv_window_detection'
      objectsensortemperature:
        description: "Object name of external temperature sensor"
        example: 'sensor.bedroom_temperature'
    sequence:
      - variables:
          calibration_local: >
            {{  128 + ((states(objectsensortemperature) | float
              - state_attr(objectvalve, 'local_temperature') | float) / 0.5) | round(0) * 0.5
              + state_attr(objectvalve, 'local_temperature_calibration') | float
            }}
          calibration_local_condition: >
            {{ 128 + ((states(objectsensortemperature) | float
              - state_attr(objectvalve, 'local_temperature') | float) / 0.5) | round(0) * 0.5
            }}
      - choose:
        - conditions:
          - condition: template
            value_template: >-
              {{ calibration_local_condition != 0
                and is_state(objectvalvewindow, 'off')
                and states(objectsensortemperature) not in ['unavailable', 'unknown', '']
                and state_attr(objectvalve, 'local_temperature')  not in ['unavailable', 'unknown', '']
              }}
          sequence:
            - service: mqtt.publish
              data:
                topic: "zigbee2mqtt/{{- namevalve -}}/set/local_temperature_calibration"
                payload: '{{ calibration_local }}'

automation:
  - alias: "Sync Pump with Boiler"
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.esp_boiler_relay
    action:
      - service: >
          {% if trigger.to_state.state == 'on' %}
            switch.turn_on
          {% elif trigger.to_state.state == 'off' %}
            switch.turn_off
          {% endif %}
        entity_id: switch.sonoff_pump_relay

  - alias: "Turn off heating if kitchen temp above 23"
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.temperature_158d0002ca0395
        above: 23
    condition:
      - condition: state
        entity_id: switch.sonoff_pump_relay
        state: 'on'
    action:
      - service: switch.turn_off
        entity_id: switch.sonoff_pump_relay

  - alias: "Set temperature to 20.5 on schedule"
    initial_state: true
    trigger:
      - platform: time
        at:
          - '06:00:00'
          - '16:30:00'
    condition:
      - condition: state
        entity_id: input_boolean.gas_boiler_schedule
        state: 'on'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.gas_boiler
          temperature: 20.5
          hvac_mode: heat

  - alias: "Set temperature to 17 on schedule"
    initial_state: true
    trigger:
      - platform: time
        at:
          - '09:15:00'
          - '00:00:00'
    condition:
      - condition: state
        entity_id: input_boolean.gas_boiler_schedule
        state: 'on'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.gas_boiler
          temperature: 17
          hvac_mode: heat

  - alias: gas_counter
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.door_window_sensor_158d000393f29a
      from: 'on'
      to: 'off'
      for:
        seconds: 3
    action:
      - service: input_number.set_value
        data:
          entity_id: input_number.gas_counter
          value: "{{ (states.input_number.gas_counter.state | float + 0.01 ) | round(2) }}"

  - alias: auto_local_temperature_calibration_trv
    initial_state: 'true'
    trigger:
      - platform: time_pattern
        minutes: "/30"
    action:
      - service: script.auto_local_temperature_calibration_trv
        data:
          namevalve: 'living_room_trv'
          objectvalve: 'climate.living_room_trv_climate'
          objectvalvewindow: 'switch.living_room_trv_window_detection'
          objectsensortemperature: 'sensor.temperature_158d0002bfe958'
      - service: script.auto_local_temperature_calibration_trv
        data:
          namevalve: 'master_bedroom_trv'
          objectvalve: 'climate.master_bedroom_trv_climate'
          objectvalvewindow: 'switch.master_bedroom_trv_window_detection'
          objectsensortemperature: 'sensor.temperature_158d0002323856'
      - service: script.auto_local_temperature_calibration_trv
        data:
          namevalve: 'bedroom_trv'
          objectvalve: 'climate.bedroom_trv_climate'
          objectvalvewindow: 'switch.bedroom_trv_window_detection'
          objectsensortemperature: 'sensor.temperature_158d0001ab2a27'

utility_meter:
  gas_hourly:
    source: input_number.gas_counter
    cycle: hourly
  gas_daily:
    source: input_number.gas_counter
    cycle: daily
  gas_monthly:
    source: input_number.gas_counter
    cycle: monthly
  gas_yearly:
    source: input_number.gas_counter
    cycle: yearly

