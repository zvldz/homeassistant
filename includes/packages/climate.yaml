#notify:
#  - platform: file
#    name: climate_notify
#    filename: /config/climate.log
#    timestamp: true

input_boolean:
  gas_boiler_schedule:
    name: "Boiler work on schedule (Winter)"
    icon: "mdi:timer-outline"

input_number:
  gas_counter:
    name: "Gas Counter"
    icon: "mdi:fire"
    mode: box
    min: 0.0
    max: 99999.999

climate:
  - platform: generic_thermostat
    name: "Gas Boiler"
    unique_id: 2bfe958
    heater: switch.boiler_shelly
    target_sensor: sensor.0x00158d0001ab2a27_temperature
    ac_mode: false
    min_temp: 15
    max_temp: 25
    away_temp: 17
    cold_tolerance: 0.2
    hot_tolerance: 0.3
    min_cycle_duration:
      minutes: 5

sensor:
  - platform: rest
    resource_template: "{{ states('input_text.ha1_url') }}api/states/input_number.gas_counter"
    name: ha1_gas_counter
    headers:
      authorization: !secret ha1_token
    value_template: "{{ value_json.state }}"

  - platform: rest
    resource_template: "{{ states('input_text.ha2_url') }}api/states/input_number.gas_counter"
    name: ha2_gas_counter
    headers:
      authorization: !secret ha2_token
    value_template: "{{ value_json.state }}"

script:
  turn_on_all_ac:
    alias: Turn On All AC
    sequence:
      - service: climate.turn_on
        entity_id:
          - climate.ac_living_room_climate
          - climate.ac_master_bedroom_climate
          - climate.ac_bedroom_climate

  turn_off_all_ac:
    alias: Turn OFF All AC
    sequence:
      - service: climate.turn_off
        entity_id:
          - climate.ac_living_room_climate
          - climate.ac_master_bedroom_climate
          - climate.ac_bedroom_climate

  sync_gas_counter_with_ha1:
    alias: "Sync gas counter with ha1"
    sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.gas_counter
          value: "{{ states('sensor.ha1_gas_counter') }}"

  sync_gas_counter_with_ha2:
    alias: "Sync gas counter with ha2"
    sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.gas_counter
          value: "{{ states('sensor.ha2_gas_counter') }}"

automation:
  - alias: "Sync TRV with Boiler"
    initial_state: true
    trigger:
      - platform: state
        entity_id: switch.boiler_shelly
        to: 'on'
    action:
      - service: climate.turn_on
        entity_id:
          - climate.living_room_trv
          - climate.master_bedroom_trv
          - climate.bedroom_trv
      - service: switch.turn_on
        entity_id: switch.sonoff_pump_relay

#  - alias: "Sync Pump with Boiler"
#    initial_state: true
#    trigger:
#      - platform: state
#        entity_id: switch.boiler_shelly
#    action:
#      - service: >
#          {% if trigger.to_state.state == 'on' %}
#            switch.turn_on
#          {% elif trigger.to_state.state == 'off' %}
#            switch.turn_off
#          {% endif %}
#        entity_id: switch.sonoff_pump_relay

  - alias: "Turn off heating if kitchen temp above 23"
    initial_state: true
    trigger:
      - platform: numeric_state
        entity_id: sensor.0x00158d0002ca0395_temperature
        above: 23
        below: 26
    condition:
      - condition: state
        entity_id: switch.sonoff_pump_relay
        state: 'on'
    action:
#     - service: switch.turn_off
#       entity_id: switch.sonoff_pump_relay
      - service: climate.set_temperature
        data:
          entity_id: climate.gas_boiler
          temperature: 20
          hvac_mode: heat

  - alias: "Set temperature to 'climate_control_temperature' on schedule"
    initial_state: true
    trigger:
      - platform: time
        at:
          - '05:30:00'
          - '17:00:00'
    condition:
      - condition: state
        entity_id: input_boolean.gas_boiler_schedule
        state: 'on'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.gas_boiler
          temperature: "{{ states('input_number.climate_control_temperature') | float(15) }}"
          hvac_mode: heat
      - service: switch.turn_on
        entity_id: switch.sonoff_pump_relay
#      - service: persistent_notification.create
#        data:
#          title: "Thermostat"
#          message: "Set temperature to 20.5 on schedule (state input: {{ states('input_boolean.gas_boiler_schedule') }})"

  - alias: "Set temperature to 17 on schedule"
    initial_state: true
    trigger:
      - platform: time
        at:
          - '09:00:00'
          - '23:30:00'
    condition:
      - condition: state
        entity_id: input_boolean.gas_boiler_schedule
        state: 'on'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.gas_boiler
          temperature: 17
          hvac_mode: heat

  - alias: gas_counter
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.0x00158d000393f29a_contact
      from: 'on'
      to: 'off'
      for:
        seconds: 3
    action:
      - service: input_number.set_value
        data:
          entity_id: input_number.gas_counter
          value: "{{ (states.input_number.gas_counter.state | float(0) + 0.01 ) | round(2) }}"

  - alias: "Kitchen button is pressed single"
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.0x38398ffffe1ff367_action
        to: 'single'
    condition:
      - condition: state
        entity_id: input_boolean.gas_boiler_schedule
        state: 'on'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.gas_boiler
          temperature: "{{ states('input_number.climate_control_temperature') | float(15) }}"
          hvac_mode: heat
      - service: switch.turn_on
        entity_id:
          - switch.sonoff_pump_relay
          - switch.boiler_shelly

  - alias: "Kitchen button is pressed double"
    initial_state: true
    trigger:
      - platform: state
        entity_id: sensor.0x38398ffffe1ff367_action
        to: 'double'
    condition:
      - condition: state
        entity_id: input_boolean.gas_boiler_schedule
        state: 'on'
    action:
      - service: climate.set_temperature
        data:
          entity_id: climate.gas_boiler
          temperature: 17
          hvac_mode: heat

utility_meter:
  gas_hourly:
    source: input_number.gas_counter
    cycle: hourly
  gas_daily:
    source: input_number.gas_counter
    cycle: daily
  gas_monthly:
    source: input_number.gas_counter
    cycle: monthly
  gas_yearly:
    source: input_number.gas_counter
    cycle: yearly

